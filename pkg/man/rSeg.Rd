% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rSeg.R
\name{rSeg}
\alias{rSeg}
\title{Recursive Segmentation by CART}
\usage{
rSeg(formula, data, maxdepth = 10L, minsplit = 20L, minbucket = 7L, ...)
}
\arguments{
\item{formula}{a symbolic description of the model to be fit.}

\item{data}{a data frame that contains the variables in the model.}

\item{maxdepth}{maximal depth of the tree models used for recursive segmentation. The number of decision rules that define a segment can be controled this way.}

\item{minsplit}{minimal size of a subset to allow for furhter segmentation.}

\item{minbucket}{minimal size of a segment.}

\item{...}{further arguments passed to \link[rpart]{rpart.control}.}
}
\value{
An object of class \code{segmentation}.
}
\description{
Recursive segmentation based on the CART algorithm.
}
\details{
The algorithm makes use of \link[rpart]{rpart} to construct a recursive segmentation model. The \link[rpart]{prune} funktion is used to determine CART trees of optimal size by the minimal cross-validated error estimate. There is a \link[=predict.segmentation]{predict}, \link[=predict.segmentation]{plot}, \link[=predict.segmentation]{summary} and \link[=print.segmentation]{print} function. See the corresponding documentation for details.
}
\examples{
### regression
airq <- subset(airquality, !is.na(Ozone))
set.seed(1234)
airseg <- rSeg(Ozone ~ ., data = airq)
airseg
plot(airseg)

### classification
set.seed(1234)
irisseg <- rSeg(Species ~ ., data = iris)
irisseg
plot(irisseg)

### survival analysis
if (require("TH.data")) {
data("GBSG2", package = "TH.data")
set.seed(1234)
GBSG2seg <- rSeg(Surv(time, cens) ~ ., data = GBSG2)
print(GBSG2seg)
plot(GBSG2seg)
}
}

